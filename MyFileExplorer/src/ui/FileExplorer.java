/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.List;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import javafx.scene.layout.Border;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author Windows 18
 */
public class FileExplorer extends javax.swing.JFrame {
    
    String rootPath = "D:\\MyPRJFolder";
    DefaultMutableTreeNode myRootTree = null;
    Font itemFont = new Font("Segoe UI", 0, 18);
    String imgReg = "^(.*)\\.(png|jpg)$";
    String txtReg = "^(.*)\\.(html|txt)$";
    public FileExplorer() {
        
        initComponents();
        
        viewBox.setBorder(BorderFactory.createEmptyBorder(30, 30, 30, 30));
        viewBox.setLayout(new BoxLayout(viewBox, BoxLayout.Y_AXIS));
        explorePath();
        setLocationRelativeTo(null);
        setTitle("HungCC Explorer");
    }
    
    public void explorePath(File dirFile, DefaultMutableTreeNode rootNode) {
        //Recursion
        TreePath path = new TreePath(rootPane);
        
        File[] fileList = dirFile.listFiles();
        if (fileList.length == 0) {
            return;
        }
        for (File file : fileList) {
            
            DefaultMutableTreeNode node = new DefaultMutableTreeNode(new Folder(file));            
            
            if (file.isDirectory()) {
                
                explorePath(file, node);
                rootNode.add(node);
            }
            ((Folder) rootNode.getUserObject()).fileList.add(file);
            
        }
    }
    
    public void explorePath() {
        
        myRootTree = (DefaultMutableTreeNode) this.fileTree.getModel().getRoot();
        myRootTree.setUserObject(new Folder(new File(rootPath)));
        explorePath(new File(rootPath), myRootTree);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileTree = new javax.swing.JTree();
        viewBox = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(200);

        fileTree.setBackground(new java.awt.Color(102, 102, 102));
        fileTree.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        fileTree.setForeground(new java.awt.Color(255, 255, 255));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("MyComputer");
        fileTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        fileTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileTreeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(fileTree);

        jSplitPane1.setLeftComponent(jScrollPane1);

        viewBox.setBackground(new java.awt.Color(51, 51, 51));
        viewBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout viewBoxLayout = new javax.swing.GroupLayout(viewBox);
        viewBox.setLayout(viewBoxLayout);
        viewBoxLayout.setHorizontalGroup(
            viewBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 615, Short.MAX_VALUE)
        );
        viewBoxLayout.setVerticalGroup(
            viewBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(viewBox);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearItem() {
        
        viewBox.removeAll();
        
    }
    
    private void fileTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileTreeMouseClicked
        // TODO add your handling code here:
        if (this.fileTree.getSelectionPath() == null) {
            return;
        }
        clearItem();
        DefaultMutableTreeNode selectedNode = ((DefaultMutableTreeNode) this.fileTree.getSelectionPath().getLastPathComponent());        
        Folder selectedObj = (Folder) selectedNode.getUserObject();
        ArrayList<File> files = selectedObj.fileList;
        for (File file : files) {
            JLabel item = new JLabel(file.getName());
            item.addMouseListener(new MouseAdapter() {
                
                @Override
                public void mouseClicked(MouseEvent e) {
                    System.out.println(e.getClickCount());
                    if((e.getClickCount() % 2)== 0 && !e.isConsumed()){
                        e.consume();
                        handleClickLbl(((JLabel) e.getSource()).getText());
                    }
                }
                
            });
            item.setText(file.getName());
            item.setFont(itemFont);
            item.setForeground(Color.WHITE);
            item.setCursor(new Cursor(Cursor.HAND_CURSOR));
            item.setVisible(true);
            String iconPath = null;
            if (file.getName().matches(imgReg)) {
                iconPath = "/image/icons8_Image_File_35px.png";
            } else if (file.getName().matches(txtReg)) {
                iconPath = "/image/icons8_HTML_Filetype_35px.png";
            } else {
                iconPath = "/image/icons8_Folder_35px.png";
            }
            item.setIcon(new ImageIcon(getClass().getResource(iconPath)));
            viewBox.add(item);
            
            System.out.println("Added");
        }
        
        viewBox.updateUI();
    }//GEN-LAST:event_fileTreeMouseClicked
    
    private void handleClickLbl(String itemName) {
        //get the selection path
        TreePath parentPath = this.fileTree.getSelectionPath();
        
        if (itemName.matches(imgReg)) {
            //showImage
//            System.out.println("Image");
            DefaultMutableTreeNode obj = (DefaultMutableTreeNode) parentPath.getLastPathComponent();
            Folder f = (Folder) obj.getUserObject();
            ShowImage imgDlg = new ShowImage(f.getFile(itemName));
            imgDlg.setVisible(true);
        } else if (itemName.matches(txtReg)) {
            //readText
            DefaultMutableTreeNode obj = (DefaultMutableTreeNode) parentPath.getLastPathComponent();
            Folder f = (Folder) obj.getUserObject();
            HtmlReaderDlg htmlReaderDlg = new HtmlReaderDlg(f.getFile(itemName), this, itemName, false);
            htmlReaderDlg.setVisible(true);
            
        } else {
            //openFolder
            System.out.println("Folder");
            
            int childNB = this.fileTree.getModel().getChildCount(parentPath.getLastPathComponent());
            
            for (int i = 0; i < childNB; i++) {
                DefaultMutableTreeNode node = (DefaultMutableTreeNode) this.fileTree.getModel().getChild(parentPath.getLastPathComponent(), i);
                if (node.toString().equals(itemName)) {
                    System.out.println();
                    
                    this.fileTree.setSelectionPath(parentPath.pathByAddingChild(node));
                    fileTreeMouseClicked(null);
                    break;
                }
                
            }
            
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileExplorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileExplorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileExplorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileExplorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileExplorer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree fileTree;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel viewBox;
    // End of variables declaration//GEN-END:variables
}
